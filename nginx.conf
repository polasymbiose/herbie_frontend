http {
  charset utf-8;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  server_tokens off;
  types_hash_max_size 2048;
  client_max_body_size 10M;

  # MIME
  include mime.types;
  default_type application/octet-stream;

  # disabled logging, use `PM2 logs` instead
  access_log off;
  error_log off;

  # gzip
  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

  # SSL
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  # modern configuration
  ssl_protocols TLSv1.2;
  ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;
  ssl_prefer_server_ciphers on;

  # OCSP Stapling
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
  resolver_timeout 2s;

  # load configs
  include /etc/nginx/conf.d/*.conf;

  #####################################################
  ## the above are stable, the below would be custom ##
  #####################################################

  map $host $mey_ssr {
    www.herbie-unverpackt 127.0.0.1:3000;
    staging-www.herbie-unverpackt 127.0.0.1:1338;
    dev-www.herbie-unverpackt 127.0.0.1:1337;
  }

  # single SSL certificate for multiple domains
  ssl_certificate /etc/letsencrypt/live/www.herbie-unverpackt/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/www.herbie-unverpackt/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/www.herbie-unverpackt/fullchain.pem;

  # https://github.com/strapi/strapi/issues/2424#issuecomment-445964719
  map $http_x_forwarded_host $custom_forwarded_host {
    default "$host";
    strapi "strapi";
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name www.herbie-unverpackt staging-www.herbie-unverpackt dev-www.herbie-unverpackt;

    # reverse proxy
    location / {
      proxy_pass http://$mey_ssr$request_uri;
      proxy_http_version  1.1;
      proxy_cache_bypass  $http_upgrade;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $custom_forwarded_host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Port $server_port;
    }

    # security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # . files
    location ~ /\.(?!well-known) {
      deny all;
    }
  }

  # http => https
  server {
    listen 80;
    listen [::]:80;

    server_name www.herbie-unverpackt staging-www.herbie-unverpackt dev-www.herbie-unverpackt;

    # ACME-challenge
    location ^~ /.well-known/acme-challenge/ {
      root /var/www/_letsencrypt;
    }

    location / {
      return 301 https://$server_name$request_uri;
    }
  }
}
